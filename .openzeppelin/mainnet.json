{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x219b2276A95DeD887d1281c0841Af4161C4bb415",
      "txHash": "0x1dea0930eafb18e30d0e429a0c8c5cca68981d747c21f4c00647de37a5659408",
      "kind": "uups"
    }
  ],
  "impls": {
    "63e931f5f250af32bc4ae908e71e6832147870539babc410c28dc3c058b395dc": {
      "address": "0xb20BF785d1dEb9e41093Ea1567d65954960d50f7",
      "txHash": "0x8dd29429589c0b9e2d45c3c3a2c7825ebb61e5f186a639b1beca4e1c8b4e8cd9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "PaymentSplitterUpgradeable",
            "label": "_totalShares",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:34"
          },
          {
            "contract": "PaymentSplitterUpgradeable",
            "label": "_totalReleased",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:35"
          },
          {
            "contract": "PaymentSplitterUpgradeable",
            "label": "_shares",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:37"
          },
          {
            "contract": "PaymentSplitterUpgradeable",
            "label": "_released",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:38"
          },
          {
            "contract": "PaymentSplitterUpgradeable",
            "label": "_payees",
            "type": "t_array(t_address)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:39"
          },
          {
            "contract": "PaymentSplitterUpgradeable",
            "label": "_erc20TotalReleased",
            "type": "t_mapping(t_contract(IERC20Upgradeable)1288,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:41"
          },
          {
            "contract": "PaymentSplitterUpgradeable",
            "label": "_erc20Released",
            "type": "t_mapping(t_contract(IERC20Upgradeable)1288,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:42"
          },
          {
            "contract": "PaymentSplitterUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)43_storage",
            "src": "@openzeppelin/contracts-upgradeable/finance/PaymentSplitterUpgradeable.sol:195"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "WristAficionadoWatchClub",
            "label": "claimedWL",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/Wristables.sol:17"
          },
          {
            "contract": "WristAficionadoWatchClub",
            "label": "dutchAuction",
            "type": "t_struct(DutchAuction)3297_storage",
            "src": "contracts/Wristables.sol:19"
          },
          {
            "contract": "WristAficionadoWatchClub",
            "label": "_baseTokenURI",
            "type": "t_string_storage",
            "src": "contracts/Wristables.sol:20"
          },
          {
            "contract": "WristAficionadoWatchClub",
            "label": "availableTokenId",
            "type": "t_uint16",
            "src": "contracts/Wristables.sol:22"
          },
          {
            "contract": "WristAficionadoWatchClub",
            "label": "tokenSupply",
            "type": "t_uint16",
            "src": "contracts/Wristables.sol:23"
          },
          {
            "contract": "WristAficionadoWatchClub",
            "label": "indexWL",
            "type": "t_uint8",
            "src": "contracts/Wristables.sol:24"
          },
          {
            "contract": "WristAficionadoWatchClub",
            "label": "toggleAuction",
            "type": "t_bool",
            "src": "contracts/Wristables.sol:25"
          },
          {
            "contract": "WristAficionadoWatchClub",
            "label": "saleActive",
            "type": "t_bool",
            "src": "contracts/Wristables.sol:26"
          },
          {
            "contract": "WristAficionadoWatchClub",
            "label": "mintPrice",
            "type": "t_uint128",
            "src": "contracts/Wristables.sol:27"
          },
          {
            "contract": "WristAficionadoWatchClub",
            "label": "root",
            "type": "t_bytes32",
            "src": "contracts/Wristables.sol:29"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(DutchAuction)3297_storage": {
            "label": "struct WristAficionadoWatchClub.DutchAuction",
            "members": [
              {
                "label": "startingPrice",
                "type": "t_uint128"
              },
              {
                "label": "floorPrice",
                "type": "t_uint128"
              },
              {
                "label": "startAt",
                "type": "t_uint64"
              },
              {
                "label": "expiresAt",
                "type": "t_uint64"
              },
              {
                "label": "priceDeductionRate",
                "type": "t_uint128"
              }
            ]
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_contract(IERC20Upgradeable)1288,t_uint256)": {
            "label": "mapping(contract IERC20Upgradeable => uint256)"
          },
          "t_contract(IERC20Upgradeable)1288": {
            "label": "contract IERC20Upgradeable"
          },
          "t_mapping(t_contract(IERC20Upgradeable)1288,t_mapping(t_address,t_uint256))": {
            "label": "mapping(contract IERC20Upgradeable => mapping(address => uint256))"
          },
          "t_array(t_uint256)43_storage": {
            "label": "uint256[43]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    }
  }
}
